#!/bin/bash

# Search query
search_query="site:*.edu.* (filetype:doc OR filetype:xls)"
encoded_query=$(echo "$search_query" | sed -e 's/ /%20/g')

# Directory to save downloaded files
mkdir -p downloaded_docs
metadata_file="downloaded_docs_metadata.csv"
echo "name,label" >"$metadata_file"

# Initialize counters
total_links=0
successful_downloads=0

# Function to download and verify a single file
download_and_verify() {
	local url=$1
	local metadata_file=$2

	wget -q -P downloaded_docs "$url"
	if [ $? -eq 0 ]; then
		filename=$(basename "$url")
		filepath="downloaded_docs/$filename"

		# Check the file format
		file_type=$(file --mime-type -b "$filepath")
		if [[ "$file_type" == "application/msword" || "$file_type" == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" || "$file_type" == "application/vnd.ms-excel" || "$file_type" == "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" ]]; then
			echo "$filename,0" >>"$metadata_file"
			echo "Success: $filename"
			successful_downloads=$((successful_downloads + 1))
		else
			rm "$filepath"
			echo "Invalid format: $url"
		fi
	else
		echo "Failed to download: $url"
	fi
}

# Main loop to paginate through search results and download files
start=0
while true; do
	curl -s -A "Mozilla/5.0" "https://www.google.com/search?q=$encoded_query&num=10&start=$start" -o results.html
	links=$(grep -oP 'http[s]?://[^"]+\.(doc|xls)' results.html | uniq)

	# Check if there are no more links to process
	if [ -z "$links" ]; then
		break
	fi

	# Update total links count
	for link in $links; do
		total_links=$((total_links + 1))
		download_and_verify "$link" "$metadata_file"
	done

	# Increment the start for the next page of results
	start=$((start + 10))

	# Sleep to avoid rate limiting
	sleep 5
done

# Calculate success percentage
if [ $total_links -gt 0 ]; then
	success_percentage=$((100 * successful_downloads / total_links))
else
	success_percentage=0
fi

echo "Download complete. Files saved in downloaded_docs directory."
echo "Metadata saved in $metadata_file."
echo "Percentage of successful downloads: $success_percentage%"

#
#
#
#
#
# #!/bin/bash
#
# # Search query
# search_query="site:*.edu.vn filetype:doc"
# encoded_query=$(echo "$search_query" | sed -e 's/ /%20/g')
#
# # Number of files to download
# target_downloads=10000
#
# # Directory to save downloaded files
# mkdir -p downloaded_docs
# metadata_file="downloaded_docs_metadata.csv"
# echo "name,label" >"$metadata_file"
#
# # Initialize counters
# total_links=0
# successful_downloads=0
#
# # Function to download and verify a single file
# download_and_verify() {
# 	local url=$1
# 	local metadata_file=$2
#
# 	wget -q -P downloaded_docs "$url"
# 	if [ $? -eq 0 ]; then
# 		filename=$(basename "$url")
# 		filepath="downloaded_docs/$filename"
#
# 		# Check the file format
# 		file_type=$(file --mime-type -b "$filepath")
# 		if [[ "$file_type" == "application/msword" || "$file_type" == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" ]]; then
# 			echo "$filename,0" >>"$metadata_file"
# 			echo "Success: $filename"
# 			echo 1
# 		else
# 			rm "$filepath"
# 			echo "Invalid format: $url"
# 			echo 0
# 		fi
# 	else
# 		echo "Failed to download: $url"
# 		echo 0
# 	fi
# }
#
# export -f download_and_verify
#
# # Loop through multiple pages of Google search results
# for start in $(seq 0 10 900); do
# 	if [ $successful_downloads -ge $target_downloads ]; then
# 		break
# 	fi
#
# 	curl -s -A "Mozilla/5.0" "https://www.google.com/search?q=$encoded_query&num=10&start=$start" -o results.html
# 	links=$(grep -oP 'http[s]?://[^"]+\.doc' results.html | uniq)
#
# 	# Update total links count
# 	total_links=$((total_links + $(echo "$links" | wc -l)))
#
# 	# Download files in parallel
# 	echo "$links" | parallel -j 4 download_and_verify {} "$metadata_file" >>temp_results.txt
#
# 	# Update successful downloads count
# 	successful_downloads=$((successful_downloads + $(grep -c 1 temp_results.txt)))
# 	rm temp_results.txt
#
# 	# Sleep to avoid rate limiting
# 	sleep 5
# done
#
# # Calculate success percentage
# if [ $total_links -gt 0 ]; then
# 	success_percentage=$((100 * successful_downloads / total_links))
# else
# 	success_percentage=0
# fi
#
# echo "Download complete. Files saved in downloaded_docs directory."
# echo "Metadata saved in $metadata_file."
# echo "Percentage of successful downloads: $success_percentage%"

# #!/bin/bash
#
# # Search query
# search_query="site:*.edu.vn filetype:doc"
#
# # URL encode the search query
# encoded_query=$(echo "$search_query" | sed -e 's/ /%20/g')
#
# howmuch=10000
# # Perform the Google search and fetch the results
# curl -s -A "Mozilla/5.0" "https://www.google.com/search?q=$encoded_query&num=$howmuch" -o results.html
#
# # Parse the results to find .doc links
# links=$(grep -oP 'http[s]?://[^"]+\.doc' results.html | uniq)
#
# # Create a directory to save the downloaded files
# mkdir -p downloaded_docs
#
# # Create or overwrite the CSV metadata file
# metadata_file="downloaded_docs_metadata.csv"
# #echo "name,label" >"$metadata_file"
#
# # Initialize counters
# total_links=0
# successful_downloads=0
#
# # Download each .doc file and write its name to the metadata file
# for link in $links; do
# 	total_links=$((total_links + 1))
# 	echo "Downloading $link..."
# 	wget -P downloaded_docs "$link"
#
# 	# Check if the download was successful
# 	if [ $? -eq 0 ]; then
# 		# Extract the filename from the URL
# 		filename=$(basename "$link")
# 		filepath="downloaded_docs/$filename"
#
# 		# Check the file format using the file command
# 		file_type=$(file --mime-type -b "$filepath")
# 		if [[ "$file_type" == "application/msword" || "$file_type" == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" ]]; then
# 			successful_downloads=$((successful_downloads + 1))
# 			# Write the filename and label to the CSV file
# 			echo "$filename,0" >>"$metadata_file"
# 		else
# 			echo "Invalid file format: $file_type. Removing $filepath"
# 			rm "$filepath"
# 		fi
# 	else
# 		echo "Failed to download $link"
# 	fi
# done
#
# # Calculate the percentage of successful downloads
# if [ $total_links -gt 0 ]; then
# 	success_percentage=$((100 * successful_downloads / total_links))
# else
# 	success_percentage=0
# fi
#
# echo "Download complete. Files saved in downloaded_docs directory."
# echo "Metadata saved in $metadata_file."
# echo "Percentage of successful downloads: $success_percentage%"
